// JOB SYSGEN03  ZAPRELO ASSEMBLE AND CATALOG
// OPTION CATAL
 PHASE ZAPRELO,S
// EXEC ASSEMBLY
ZAPR     TITLE 'APPLY REP CARDS TO RELOCATABLE MODULE'
***********************************************************************
*
* COPY A SINGLE RELOCATABLE MODULE FROM A CARD IMAGE SYSPCH FILE, 
* ADDING REP CARDS JUST PRIOR TO THE END CARD.  
*
* IN REAL LIFE, DOS SYSTEMS HAD A CARD READER AND A PUNCH.  SO 
* PUNCHING OUT THE RELOCATABLE MODULE, HAND-KEYING THE REP CARDS,
* ADDING THEM TO THE OBJECT DECK AT THE RIGHT POINT, AND CATALOGING
* THE UPDATED DECK WAS A TRIVIAL EXERCISE.
*
* IF DOS HAD INCLUDED AN OBJMAINT UTILITY, THIS PROGRAM WOULD NOT 
* BE NEEDED.  BUT DOS WAS NEVER DESIGNED FOR CARDLESS OPERATION.
* 
* INPUT
*   UIN, SYS004, UNBLOCKED CARD-IMAGE SYSPCH  FILE ON DISK (81-BYTE
*        RECORDS), CONTAINING EXACTLY ONE RELOCATABLE MODULE.  THIS 
*        FILE IS TYPICALLY SYSPCH OUTPUT FROM THE RSERV PROGRAM. 
*   CARDS, SYS004, REP CARDS TO BE ADDED JUST BEFORE THE RELOCATABLE 
*        MODULE'S END CARD.  EACH CARD STARTS '+REP' AND OTHERWISE
*        FOLLOWS THE REP CARD FORMAT DOCUMENTED IN DOS SYSTEM CONTROL
*        AND SERVICE, GC24-5036.  SEE P. 233 OF THE -7 EDITION.  
*
* OUTPUT
*   UOUT, SYS005, UNBLOCKED CARD IMAGE SYSIPT FILE ON DISK (80-BYTE
*        RECORDS).  THIS FILE A COPY OF THE INPUT FILE, WITH REP CARDS 
*        FROM THE CARD READER ADDED JUST BEFORE THE END CARD.  THE 
*        STACKER SELECTION BYTE IN COLUMN ONE IS REMOVED--COLUMNS 2-81
*        OF THE INPUT ARE PLACED IN 1-80 OF THE OUTPUT.  ANY REP CARDS 
*        IN THE INPUT ARE REMOVED.  (SHOULD ONE WISH TO KEEP THEM, 
*        INCLUDE THEM IN THE CARD INPUT STREAM.)  NOTE THAT THE '+' IN 
*        THE REP CARD INPUT CARDS IS CHANGED TO X'02' BEFORE BEING 
*        WRITTEN.  
*
***********************************************************************
         SPACE 3
***********************************************************************
*
*
ZAPRELO  START 0
         BALR  12,0                     LOAD BASE REG
         BCTR  12,0
         BCTR  12,0
         USING ZAPRELO,12
*
         OPEN  UIN,UOUT            OPEN INPUT AND OUTPUT FILES
*
*  COPY INPUT TO OUTFILE UNTIL END CARD READ.
*
READLOOP DS    0H                  LOOP UNTIL RELO MOD 'END' CARD
         GET   UIN                 READ A CARD
         CLC   INCARD(L'ENDTEST),ENDTEST  IS IT AN END CARD
         BE    REPLOOP             ..YES, GO GET REP CARDS
         CLC   INCARD(L'REPTEST1),REPTEST1 IS IT A REP CARD
         BE    READLOOP            ..YES, DROP IT
         MVC   OUTCARD,INCARD      COPY TO OUTPUT
         PUT   UOUT                WRITE CARD TO SYSPCH
         B     READLOOP            CONTINUE COPYING
*
* RELO MODULE 'END' CARD READ.  COPY REP CARDS UNTIL EOF
*
REPLOOP  DS    0H                  COPY REP CARDS LOOP
         EXCP  INREPS              READ A CARD
         WAIT  (1)                 WAIT FOR COMPLETION
         TM    4(1),X'01'          UNIT EXCEPTION RAISED
         BO    REPDONE             ..YES, END OF DECK, DONE
         CLC   REPCARD(L'EOFTEST),EOFTEST  END OF FILE (/*)
         BE    REPDONE             ..YES, END OF DECK, DONE
         CLC   REPCARD(L'REPTEST2),REPTEST2  +REP CARD
         BNE   REPLOOP             ..NO, SKIP/IGNORE IT
         MVC   OUTCARD,REPCARD     COPY TO OUTPUT
         MVI   OUTCARD,X'02'       CREATE 12-2-9 MULTIPUNCH
         PUT   UOUT                WRITE CARD TO SYSPCH
         B     REPLOOP             CONTINUE COPYING
*
* EOF ON SYS000, END OF REP CARDS,  WRITE END CARD AND EXIT
*
REPDONE  DS    0H                  END OF REP CARDS
         MVC   OUTCARD,INCARD      COPY TO OUTPUT
         PUT   UOUT                WRITE CARD TO SYSPCH
*
* END CARD PROCESSED.  DUPLICATE THE REST OF THE DECK
*
ENDLOOP  DS    0H                  READ REMAINDER OF DECK
         GET   UIN                 READ NEXT CARD
         MVC   OUTCARD,INCARD      COPY TO OUTPUT
         PUT   UOUT                WRITE IT
         B     ENDLOOP             CONTINUE THE COPY
*
* EOF.  WRITE AN EOF, CLOSE FILES AND EXIT.  
*
ENDINPUT DS    0H
         MVC   OUTCARD(L'EOFTEST),EOFTEST MOVE '/* '
         CLOSE UIN,UOUT            CLOSE FILES
         EOJ                       ALL DONE.
         SPACE 2
INAREA   DS    0CL81               INPUT AREA
         DC    C' '                SPACE FOR STACKER SELECT
INCARD   DC    CL80' '             INPUT CARD IMAGE
* 
OUTAREA  DS    0CL88               OUTPUT CARD IMAGE AREA
         DC    XL8'00'             COUNT FIELD FOR DISK OUTPUT
OUTCARD  DC    CL80' '             OUTPUT CARD IMAGE
*
REPCARD  DC    CL80' '             +REP CARD TO BE ADDED
*
ENDTEST  DS    0CL4
         DC    X'02',C'END'        TEST FOR END CARD
*
EOFTEST  DC    C'/* '              TEST FOR END OF FILE
*
REPTEST1 DS    0CL6                TEST REP CARD IN MODULE
         DC    X'02'               12-2-9 MULTIPUNCH 
         DC    C'REP  '
*
REPTEST2 DC    C'+REP'             TEST FOR +REP CARD
*
         LTORG ,                        LITERALS HERE...
         SPACE 2
         PRINT  NOGEN
INREPS   CCB    SYS000,READCCW
*
READCCW  CCW    X'02',REPCARD,X'00',L'REPCARD
*
*  INPUT FILE - RELOCATABLE MODULE
*
UIN      DTFSD DEVADDR=SYS004,          ASSIGNED TO SYS004             X
               DEVICE=2314,             RESIDES ON 2314                X
               TYPEFLE=INPUT,           READING                        X
               EOFADDR=ENDINPUT,        EOF ADDRESS                    X
               IOAREA1=INAREA,          CARD INPUT BUFFER              X
               RECFORM=FIXUNB,          FIXED LENGTH UNBLOCKED RECORDS X
               BLKSIZE=81               81-BYTE BLOCKS
*
* OUTPUT FILE - RELOCATABLE MODULE WITH REP CARDS ADDED
*
UOUT     DTFSD DEVADDR=SYS005,          ASSIGNED TO SYS005             X
               DEVICE=2314,             RESIDES ON 2314                X
               TYPEFLE=OUTPUT,          CREATING FILE                  X
               IOAREA1=OUTAREA,         ONE I/O AREA                   X
               RECFORM=FIXUNB,          FIXED LENGTH UNBLOCKED RECORDS X
               BLKSIZE=88               80-BYTE BLOCKS PLUS COUNT FLD
*
         END   
/*
// EXEC LNKEDT
/&