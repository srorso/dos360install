// JOB DEMOSMPX LINEAR PROGRAMMING SIMPLEX METHOD
// OPTION LINK,LISTX
// EXEC FFORTRAN
// FTC NAME=SIMPLEX
C  OPERATIONS RESEARCH--
C  LINEAR PROGRAMMING - SIMPLEX METHODD - MAXIMIZATION PROBLEMS
C
      INTEGER R,C
      DIMENSION ATRIX(6,10),SAVER(10),CJR(10),ZJ(10),DIF(10),
     -CJC(6),FS(6),DIV(6),SAVEC(6)
C  READ IN SIZE OF MATRIX AND THE COEFFICIENTS OF THE OBJECTIVE FUNCTION
      READ 1, R,C,(CJR(I),I=1,C)
    1 FORMAT (2I2/(8F10.0))
C  READ IN MATRIX (CONSTRAINT COEFFICIENTS) AND INITIALIZE
C       COEFFICIENTS OF SOLUTION PRODUCT MIX (UNIT GAIN)
      DO 15 I=1,R
        CJC(I)=0.0
        READ 2, (ATRIX(I,J),J=1,C)
    2   FORMAT (8F10.0)
   15 CONTINUE
C  READ IN FEASIBLE SOLUTION VALUES
      READ 3, (FS(I),I=1,R)
    3 FORMAT (F10.0)
      NUMBR=0
      MANUM=1
C  SKIP TO TOP OF FIRST PAGE
      PRINT 13
   13 FORMAT (1H1)
   70 NUMBR=NUMBR+1
C  CALCULATE ZJ AND DIFFERENCE ROW VALUES
      DO 20 I=1,C
        ZJ(I)=0.0
        DO 21 J=1,R
          ZJ(I)=ZJ(I)+ATRIX(J,I)*CJC(J)
   21   CONTINUE
        DIF(I)=CJR(I)-ZJ(I)
   20 CONTINUE
C  PRINT TABLEAU NUMBER AND OBJECTIVE FUNCTION COEFFICIENTS
      PRINT 5, MANUM,(CJR(I),I=1,C)
    5 FORMAT (1H-,44X,'TABLEAU  NUMBER  ',I2/1H0,15X,'CJC'/
     -1H0,7X,'CJR',10X,10F10.3)
      PRINT 12
   12 FORMAT (1H )
C  PRINT OUT THE CURRENT MATRIX
      DO 16 I=1,R
        PRINT 6, CJC(I),(ATRIX(I,J),J=1,C),FS(I)
    6   FORMAT (1H ,10X,12F10.3)
   16 CONTINUE
C  PRINT ZJ (UNIT LOSS) ROW
      PRINT 7, (ZJ(I),I=1,C)
    7 FORMAT (1H0,7X,'ZJ',11X,10F10.3)
C  PRINT DIFFERENCE ROW
      PRINT 11, (DIF(J),J=1,C)
   11 FORMAT (1H ,7X,'DIF',10X,10F10.3)
      PRINT 12
C  FIND LARGEST DIFFERENCE (INCOMING ITEM)
      N=1
      DO 30 I=1,C
        IF (DIF(N) .LT. DIF(I)) N=I
   30 CONTINUE
C  IF NEGATIVE OR ZERO, OPTIMALITY ACHIEVED
      IF (DIF(N) .LE. 0) GO TO 99
C  CALCULATE DIVIDENDS AND FIND SMALLEST ONE (OUTGOING ITEM)
      M=1
      DO 40 I=1,R
        IF (ATRIX(I,N)) 42,43,42
   43   DIV(I)=999999.
        GO TO 40
   42   DIV(I)=FS(I)/ATRIX(I,N)
        IF (DIV(I) .LT. DIV(M)) M=I
   40 CONTINUE
C  PRINT OUT LARGEST COL. NUMBER, DIVIDENDS, AND SMALLEST DIV. (ROW) NO.
      PRINT 8, N,(DIV(I),I=1,R)
    8 FORMAT (1H ,'LARGEST  DIF  IS  COL. ',I2/(1H ,4X,'DIV  =',F10.3))
      PRINT 9, M
    9 FORMAT (1H, 'SMALLEST  DIV  IS ROW ',I2///)
C  CHANGE THE CORRECT UNIT GAIN COEFFICIENT
      CJC(M)=CJR(N)
C  SAVE COEFFICIENTS TO CALCULATE NEW MATRIX
      SAVX=ATRIX(M,N)
      SAVFS=FS(M)
      DO 50 I=1,C
        SAVER(I)=ATRIX(M,I)
   50 CONTINUE
C  CALCULATE THE NEW MATRIX AND FEASIBLE SOLUTIONS
      DO 60 I=1,R
        SAVEC(I)=ATRIX(I,N)
        IF (I-M) 61,62,61
   61   FS(I)=FS(I)-(SAVFS/SAVX)*SAVEC(I)
        DO 63 J=1,C
          ATRIX(I,J)=ATRIX(I,J)-(SAVER(J)/SAVX)*SAVEC(I)
   63   CONTINUE
        GO TO 60
   62   FS(I)=FS(I)/SAVX
        DO 64 J=1,C
          ATRIX(I,J)=ATRIX(I,J)/SAVX
   64   CONTINUE
   60 CONTINUE
C  UPDATE TABLEAU NUMBER AND CHECK FOR OVERFLOW
      MANUM=MANUM+1
      IF (NUMBR-2) 70,80,80
   80 PRINT 12
      NUMBR=0
      GO TO 70
C  CALCULATE AND PRINT THE OPTIMAL SOLUTION
   99 OPT=0.0
      DO 98 I=1,R
        OPT=OPT+CJC(I)*FS(I)
   98 CONTINUE
      PRINT 10, OPT
   10 FORMAT (1H0,10X,'THE OPTIMAL SOLUTION IS',F10.3)
      STOP
      END
/*
// EXEC LNKEDT
// EXEC
0306
0.0       0.0       0.0       .25       .5        .75
1.0       0.0       0.0       2.0       3.0       1.0
0.0       1.0       0.0       3.0       3.0       4.0 
0.0       0.0       1.0       2.0       5.0       8.0
2400.
2400.
2400.
/*
// EXEC
0305
0.0       0.0       0.0       100.      200.
1.0       0.0       0.0       150.      60.
0.0       1.0       0.0       50.       40.
0.0       0.0       1.0       10.       20.
30000.
13000.
5000.
/*
// EXEC
0307
0.0       0.0       0.0       1.0       2.0       3.0       4.0
1.0       0.0       0.0       0.4       0.5       0.6       0.0
0.0       1.0       0.0       0.1       0.0       0.3       1.0
0.0       0.0       1.0       0.0       0.7       0.8       0.4
437.
281.
883.
/*
/&
