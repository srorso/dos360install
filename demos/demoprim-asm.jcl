// JOB DEMOPRIM PRINE NUMBER GENERATOR
// OPTION LINK
// EXEC ASSEMBLY
         TITLE 'PRIME NUMBER GENERATOR'
* TO DECIDE WHETHER A NUMBER N IS A PRIME, WE DIVIDE IT BY ALL PRIMES
*   WITH VALUE LESS THAN OR EQUAL TO THE SQUARE ROOT OF N.
*   IF NO EXACT DIVISOR IS FOUND, N IS A PRIME.
* ADAPTED FOR DOS FROM "SYSTEM/360 POINTERS PROGRAMMING TECHNIQUES",
*   C20-1620-0 ON WWW.BITSAVERS.ORG
* FOR A LONG JOB, THE OPERATOR CAN PUSH THE EXTERNAL INTERRUPT BUTTON
*   AND A CHECKPOINT WILL BE TAKEN TO RESTART LATER
* DEMONSTRATES STXIT OC (OPERATOR COMMUNICATIONS)
* DEMONSTRATES CHECKPOINTING
* DEMONSTRATES PIOCS FOR THE PRINTER AND CONSOLE
*        PRINT NOGEN
PRIMNUMS START X'5000'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         BALR  R15,0
         USING *,R15
         COMRG
         MVC   HEAD1(8),0(R1)      MOVE DATE TO HEADING FROM COMRG
         MVC   UPSI,23(R1)         SAVE UPSI BYTE FROM COMRG
         MVC   SYSLNCT+1(1),78(R1) USE SYSTEM LINE COUNT FROM COMRG
         STXIT OC,OCEXIT,OCSAVE    ACCEPT EXTERNAL INTERRUPTS
         LA    R14,1
         ST    R14,PRIMES      1ST PRIME = 1
         AR    R14,R14
         ST    R14,PRIMES+4    2ND PRIME = 2
         LA    R14,1(R14)
         ST    R14,PRIMES+8    3RD PRIME = 3
         SR    R13,R13
         ST    R13,MNS
         ST    R14,NM          STORE 3RD PRIME IN PREVIOUS PRIME NUMBER
         LA    R9,3*4          SET INDEX ON PRIME NUMBER ARRAY
LOOP1    L     R14,NM          LOAD PREVIOUS NUMBER
         A     R14,PRIMES+4      AND ADD 2 TO PREVIOUS NUMBER
         ST    R14,NM            TO GET NEXT NUMBER TO BE TESTED
         LA    R13,8
LOOP2    CLI   OCSW,C'1'       IF EXTERNAL INTERRUPT BUTTON PUSHED,
         BE    DOCHKPT           CREATE A CHECKPOINT
         L     R10,MNS         LOAD CURRENT NUMBERS TO BE TESTED
         L     R11,NM
         D     R10,PRIMES(R13)      REM. IN R10
         BXLE  R10,R11,LOOP1   IF REM = 0 NUMBER IS NOT PRIME, TRY NEXT
         S     R11,PRIMES(R13)       SQUARE ROOT TEST
         BM    PRIME           NUMBER IS PRIME
         LA    R13,4(R13)      TRY NEXT PRIME NUMBER AS DIVISOR
         B     LOOP2
PRIME    L     R8,NM           LOAD NUMBER FOUND TO BE PRIME
         ST    R8,PRIMES(R9)     AND STORE IN PRIME ARRAY
         LR    R2,R9           GET INDEX
         SRL   R2,2              AND DIVIDE BY 4
         LA    R2,1(R2)          AND ADD 1 TO GET NUMBER OF PRIMES
         CH    R2,=Y(NPRIMES)  IF TABLE OF PRIMES IS FULL,
         BNL   PRINT             GO PRINT IT OUT
         LA    R9,4(R9)        BUMP PRIME ARRAY INDEX
         B     LOOP1
PRINT    EQU   *
         STXIT OC              IGNORE INTERRUPTIONS WHILE PRINTING
         SR    R8,R8           CLEAR PAGE COUNTER
         LH    R9,SYSLNCT      FORCE NEW PAGE
         TM    UPSI,X'80'      IF TEN PER LINE DESIRED,
         BO    PRINT10           GO PRINT TEN PER LINE
*
* PRINT PRIMES ONE PER LINE
         LH    R2,=Y(NPRIMES)  GET NUMBER OF PRIMES IN TABLE
         LA    R3,PRIMES
LOOPPR   L     R4,0(R3)        GET PRIME NUMBER
         CVD   R4,DOUBLE
         MVC   PRINTOUT(10),=X'40206B2020206B202120'
         ED    PRINTOUT(10),DOUBLE+4
         CH    R9,SYSLNCT      IF BOTTOM OF PAGE,
         BL    PRPRT1
         BAL   R7,HEADING        PRINT HEADING AND NEXT LINE
         B     PRPRT1H
PRPRT1   EXCP  PRINTER         PRINT THE LINE
         WAIT  (1)
         LA    R9,1(R9)        INCREMENT LINE COUNTER
PRPRT1H  LA    R3,4(R3)        POINT TO NEXT PRIME
         BCT   R2,LOOPPR
         B     EOJ
*
* PRINT PRIMES TEN PER LINE
PRINT10  LA    R2,100
         STH   R2,CCWPR+6
         LA    R6,PRIMES
         LA    R5,1
PRNEXTL  LA    R4,PRINTOUT
         LA    R3,10
PRLOOP   CH    R5,=Y(NPRIMES)
         BH    PRDONE
         L     R2,0(R6)
         CVD   R2,DOUBLE
         MVC   0(10,R4),=X'40206B2020206B202120'
         ED    0(10,R4),DOUBLE+4
         LA    R4,10(R4)
         LA    R5,1(R5)
         LA    R6,4(R6)
         BCT   R3,PRLOOP
         CH    R9,SYSLNCT      IF BOTTOM OF PAGE,
         BL    PRPRT10
         BAL   R7,HEADING        PRINT HEADING AND NEXT LINE
         B     PRPRT10H
PRPRT10  EXCP  PRINTER
         WAIT  (1)
         LA    R9,1(R9)        INCREMENT LINE COUNTER
PRPRT10H MVI   PRINTOUT,C' '
         MVC   PRINTOUT+1(99),PRINTOUT
         B     PRNEXTL
PRDONE   LA    R2,PRINTOUT     IF ANYTHING ON LAST LINE,
         CR    R2,R4
         BE    EOJ
         EXCP  PRINTER           PRINT LAST LINE
         WAIT  (1)
*
EOJ      EOJ
*
* HEADING ROUTINE
HEADING  LA    R2,CCWSK          SET TO SKIP TO NEXT PAGE
         ST    R2,PRINTER+8
         LA    R8,1(R8)          MOVE PAGE NUMBER
         CVD   R8,DOUBLE
         MVC   HEAD1P(4),=X'40202020'
         ED    HEAD1P(4),DOUBLE+6
         EXCP  PRINTER           PRINT HEADING AND NEXT LINE
         WAIT  (1)
         LA    R2,CCWPR          RESET CCW ADDR.
         ST    R2,PRINTER+8
         LA    R9,3              AND RESET LINE COUNTER
         BR    R7
*
OCEXIT   MVI   OCSW,C'1'       INDICATE EXT.INTERRUPT BUTTON PUSHED
         EXIT  OC
DOCHKPT  CHKPT SYS000,CHKPTENT,ENDAPP
         LTR   R0,R0           WAS CHECKPOINT SUCESSFULL
         BNZ   OKCHKPT
         MVC   CHKPTM+11(2),=C'UN'
         EXCP  CONSOLE
         WAIT  (1)
         MVI   OCSW,C'0'       RESET CHECKPOINT REQUEST SWITCH
         B     LOOP2           CONTINUE PROGRAM
OKCHKPT  MVC   CHKPTM+11(2),=C'  '
         EXCP  CONSOLE
         WAIT  (1)
         EOJ
* ENTRY POINT WHEN PROGRAM IS RESTARTED
CHKPTENT MVI   OCSW,C'0'       RESET CHECKPOINT REQUEST SWITCH
         STXIT OC,OCEXIT,OCSAVE REESTABLISH OPERATOR COMMUNICATIONS
         B     LOOP2           GO START WHERE WE LEFT OFF
         LTORG
SYSLNCT  DC    H'0'
UPSI     DC    B'0'
* BIT 0 OFF-1 PER LINE, ON-10 PER LINE
HEAD1    DC    C'MM/DD/YY    PRIME NUMBERS     PAGE 000'
HEAD1P   EQU   *-4
OCSW     DC    C'0'
CHKPTM   DC    C'CHECKPOINT   SUCCESSFUL'
CCWCON   CCW   X'09',CHKPTM,0,L'CHKPTM
CONSOLE  CCB   SYSLOG,CCWCON
CCWSK    CCW   X'8B',0,X'40',1
         CCW   X'11',HEAD1,X'40',L'HEAD1
CCWPR    CCW   X'09',PRINTOUT,0,10
PRINTER  CCB   SYSLST,CCWPR
PRINTOUT DC    CL100' '
DOUBLE   DS    D
OCSAVE   DS    18F
MNS      DS    F
NM       DS    F       PREVIOUS PRIME NUMBER
PRIMES   DC    5800F'0'
NPRIMES  EQU   (*-PRIMES)/4
ENDAPP   EQU   *
         END
/*
// EXEC LNKEDT
// UPSI 1        0=1 PER LINE, 1=10 PER LINE
// ASSGN SYS000,X'280'  CHECKPOINT FILE
// EXEC
/&
// JOB DEMOPRIM RESTART PRIME NUMBER GENERATOR
// ASSGN SYS000,X'280'  CHECKPOINT FILE
* // MTC REW,SYS000
* // RSTRT SYS000,1
/&
